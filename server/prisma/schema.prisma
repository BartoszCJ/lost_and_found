generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}


enum ItemStatus {
  Znaleziony
  Przypisany
  Zwrocony
  Zarchiwizowany
}
enum ReportStatus {
  Oczekuje
  Zaakceptowane
  Odrzucone
}
enum ClaimStatus {
  Oczekuje
  Zaakceptowane
  Odrzucone
}


/// Przedmioty znalezione
model items {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(100)
  description      String?
  category         String             @db.VarChar(50)
  location_found   String?            @db.VarChar(150)
  date_found       DateTime?          @db.Date
  status           ItemStatus         @default(Znaleziony) 

  created_at       DateTime?          @default(now()) @db.Timestamp(6)
 assigned_to      Int?              
  assignedTo       users?             @relation("assignedTo", fields: [assigned_to], references: [id]) 
  lost_reports     lost_reports[]
  ownership_claims ownership_claims[]
}

/// Zgłoszenia zgubionych przedmiotów
model lost_reports {
  id            Int      @id @default(autoincrement())
  user_id       Int
  user          users    @relation(fields: [user_id], references: [id])
  item_id       Int?
  item          items?   @relation(fields: [item_id], references: [id])
  name          String   @default("") 
  description   String   @default("") 
  location_lost String  @default("") 
  date_lost    DateTime @default(now()) 
  status        ReportStatus  
  date_reported DateTime @default(now())
}



/// Zgłoszenia własności przedmiotów
model ownership_claims {
  id           Int       @id @default(autoincrement())
  item_id      Int
  user_id      Int
  description  String
  status       ClaimStatus @default(Oczekuje) 
  date_submitted DateTime? @default(now()) @db.Timestamp(6)
  verified_by  Int?

  item       items     @relation(fields: [item_id], references: [id], onDelete: Cascade)
  user       users     @relation("ownership_claim_user", fields: [user_id], references: [id], onDelete: Cascade)
  verifiedBy users?    @relation("ownership_claim_verifiedBy", fields: [verified_by], references: [id])
}


/// Użytkownicy systemu
model users {
  id           Int                @id @default(autoincrement())
  name         String             @db.VarChar(100)
  email        String             @unique @db.VarChar(150)
  password     String             @db.VarChar(255)
  role         String             @db.VarChar(20)
  created_at   DateTime?          @default(now()) @db.Timestamp(6)

  lostReports  lost_reports[]
  claims       ownership_claims[] @relation("ownership_claim_user")
  verifiedClaims ownership_claims[] @relation("ownership_claim_verifiedBy")
  assignedItems  items[]            @relation("assignedTo")
}

